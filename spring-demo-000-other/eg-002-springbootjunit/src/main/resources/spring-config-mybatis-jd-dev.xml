<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
  http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- dataSource -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:53306/test?useSSL=false"/>
        <property name="user" value="root"/>
        <property name="password" value="123456"/>
        <property name="minPoolSize" value="50" />
        <property name="maxPoolSize" value="50" />
        <property name="maxIdleTime" value="300" />
        <property name="acquireIncrement" value="2" />
        <property name="maxStatements" value="1000" />
        <property name="initialPoolSize" value="20" />
        <property name="idleConnectionTestPeriod" value="240" />
        <property name="acquireRetryAttempts" value="30" />
        <!--定义所有连接测试都执行的测试语句,比默认配置效率高-->
        <property name="preferredTestQuery" value="select 1" />
        <!-- 因为弹性数据库 链接1分钟内不活动会被弹性数据库回收，所以配置如下两个参数 -->
        <!--如果设为true那么在取得连接的同时将校验连接的有效性。默认为false。-->
        <property name="testConnectionOnCheckin" value="true" />
        <!--因性能消耗大请只在需要的时候使用它。
        如果设为true那么在每个connection提交的时候都 将校验其有效性。
        建议使用 idleConnectionTestPeriod或automaticTestTable
        等方法来提升连接测试的性能。默认为false；
        -->
        <property name="testConnectionOnCheckout" value="true" />
    </bean>

    <!-- mybatis 拦截sql并变更sql -->


    <!--<bean id="dataAccountTable1Handel" class="com.jd.bt.middle.data.mybatis.DataAccountTable1Handel"></bean>-->

    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.github.bjlhx15.common.springdemo.springbootjunit.domain"/>
        <property name="mapperLocations">
            <array>
                <value>classpath:com/github/bjlhx15/common/springdemo/springbootjunit/repository/**/*.xml</value>
            </array>
        </property>
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!-- 配置分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>

            </array>
        </property>
    </bean>

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <!-- 支持  @Transactional 标记   -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="NESTED" rollback-for="Exception" />
            <tx:method name="insert*" propagation="NESTED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="NESTED" rollback-for="Exception"/>
            <tx:method name="execute*" propagation="NESTED" rollback-for="Exception"/>

            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>

        </tx:attributes>
    </tx:advice>
    <aop:config expose-proxy="true" proxy-target-class="true">
        <aop:pointcut id="pc" expression="execution(* com.github.bjlhx15.common.springdemo.springbootjunit.service..*.*(..))"/>
        <aop:advisor pointcut-ref="pc" advice-ref="txAdvice"/>
    </aop:config>



</beans>